{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/ArticlesListPage.js","components/CommentsList.js","components/AddCommentForm.js","components/UpvoteSection.js","pages/PageNotFound.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","Fragment","AboutPage","articles","name","title","content","ArticlesList","_ref","map","article","key","className","style","width","substring","react_router_dom","to","concat","ArticlesListPage","components_ArticlesList","articleContent","CommentsList","comments","comment","userName","text","AddCommentForm","articleName","setArticleInfo","_useState","useState","_useState2","Object","slicedToArray","setUsername","_useState3","_useState4","commentText","setCommentText","addComment","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","body","wrap","_context","prev","next","fetch","method","JSON","stringify","headers","Content-Type","sent","json","stop","apply","this","arguments","id","type","value","onChange","event","target","rows","cols","onClick","UpvoteSection","upvotes","upvoteArticle","PageNotFound","ArticlePage","match","params","find","otherArticles","filter","articleInfo","useEffect","fetchData","components_UpvoteSection","paragraph","components_CommentsList","components_AddCommentForm","pages_PageNotFound","NavBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","tabIndex","aria-disabled","App","src_NavBar","react_router","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+OA2BeA,SAzBE,WACb,OACAC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,6RAMAF,EAAAC,EAAAC,cAAA,iQAKAF,EAAAC,EAAAC,cAAA,0PCUOE,EAzBG,WACd,OACAJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,6RAMAF,EAAAC,EAAAC,cAAA,iQAKAF,EAAAC,EAAAC,cAAA,yPCeOG,EAhCE,CACb,CACIC,KAAM,cACNC,MAAO,4DACPC,QAAS,kyBAOb,CACIF,KAAM,aACNC,MAAO,oBACPC,QAAS,61BAMb,CACIF,KAAM,aACNC,MAAO,mBACPC,QAAS,ylCCHFC,EAlBM,SAAAC,GAAA,IAAGL,EAAHK,EAAGL,SAAH,OACjBL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACME,EAASM,IAAI,SAACC,EAASC,GAAV,OACXb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OAAOC,MAAO,CAACC,MAAO,SAAaH,IAAKA,GACvDb,EAAAC,EAAAC,cAAA,MAAIY,UAAU,eAAd,YAEEd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAELd,EAAAC,EAAAC,cAAA,UAAKU,EAAQL,OACbP,EAAAC,EAAAC,cAAA,SAAIU,EAAQJ,QAAQ,GAAGS,UAAU,EAAE,KAAnC,OACAjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAML,IAAKA,EAAKM,GAAE,YAAAC,OAAcR,EAAQN,MAAQQ,UAAU,mBAAmBF,EAAQL,aCE9Fc,EAVU,WACrB,OACArB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEIH,EAAAC,EAAAC,cAACoB,EAAD,CAAcjB,SAAUkB,qCCMjBC,EAZM,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,SAAH,OACjBzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,uBACCuB,EAASd,IAAK,SAACe,EAASb,GAAV,OACXb,EAAAC,EAAAC,cAAA,OAAKW,IAAKA,GACNb,EAAAC,EAAAC,cAAA,UAAKwB,EAAQC,UACb3B,EAAAC,EAAAC,cAAA,SAAIwB,EAAQE,WCgCTC,EAtCQ,SAAAnB,GAAqC,IAAlCoB,EAAkCpB,EAAlCoB,YAAaC,EAAqBrB,EAArBqB,eAAqBC,EACxBC,mBAAS,IADeC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjDL,EADiDO,EAAA,GACvCG,EADuCH,EAAA,GAAAI,EAElBL,mBAAS,IAFSM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEjDE,EAFiDD,EAAA,GAEpCE,EAFoCF,EAAA,GAIlDG,EAAU,eAAAC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAA5C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAK,iBAAAlC,OAAkBU,EAAlB,gBAA6C,CACnEyB,OAAQ,OACRN,KAAMO,KAAKC,UAAU,CAAE9B,WAAUC,KAAMY,IACvCkB,QAAS,CACLC,eAAgB,sBALT,cACTX,EADSG,EAAAS,KAAAT,EAAAE,KAAA,EAQIL,EAAOa,OARX,OAQTZ,EARSE,EAAAS,KASf7B,EAAekB,GACfZ,EAAY,IACZI,EAAe,IAXA,wBAAAU,EAAAW,SAAAf,MAAH,yBAAAJ,EAAAoB,MAAAC,KAAAC,YAAA,GAchB,OACIjE,EAAAC,EAAAC,cAAA,OAAKgE,GAAG,oBACJlE,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,qBAEIF,EAAAC,EAAAC,cAAA,SAAOY,UAAU,eAAeqD,KAAK,OAAOC,MAAOzC,EAAU0C,SAAU,SAACC,GAAD,OAAWjC,EAAYiC,EAAMC,OAAOH,YAGnHpE,EAAAC,EAAAC,cAAA,OAAKY,UAAU,cACXd,EAAAC,EAAAC,cAAA,wBAEIF,EAAAC,EAAAC,cAAA,YAAUY,UAAU,eAAe0D,KAAK,IAAIC,KAAK,KAAKL,MAAO5B,EAAa6B,SAAU,SAACC,GAAD,OAAW7B,EAAe6B,EAAMC,OAAOH,YAGnIpE,EAAAC,EAAAC,cAAA,UAAQwE,QAAS,kBAAMhC,KAAc5B,UAAU,mBAA/C,iBCdG6D,SAlBO,SAAAjE,GAA6C,IAA1CoB,EAA0CpB,EAA1CoB,YAAa8C,EAA6BlE,EAA7BkE,QAAS7C,EAAoBrB,EAApBqB,eAErC8C,EAAa,eAAAlC,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,EAAA5C,EAAA6C,KAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAA5C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACIC,MAAK,iBAAAlC,OAAkBU,EAAlB,YAAyC,CAC/DyB,OAAQ,SAFK,cACXP,EADWG,EAAAS,KAAAT,EAAAE,KAAA,EAKEL,EAAOa,OALT,OAKXZ,EALWE,EAAAS,KAMjB7B,EAAekB,GANE,wBAAAE,EAAAW,SAAAf,MAAF,yBAAAJ,EAAAoB,MAAAC,KAAAC,YAAA,GAQnB,OACIjE,EAAAC,EAAAC,cAAA,OAAKgE,GAAG,kBACJlE,EAAAC,EAAAC,cAAA,UAAQY,UAAU,kBAAkB4D,QAAS,kBAAMG,MAAnD,cACA7E,EAAAC,EAAAC,cAAA,0CAAiCF,EAAAC,EAAAC,cAAA,SAAI0E,GAArC,cCVGE,EAJM,kBACjB9E,EAAAC,EAAAC,cAAA,kCC8CW6E,EAxCK,SAAArE,GAAe,IAEzBJ,EAFyBI,EAAZsE,MAEAC,OAAO3E,KACpBM,EAAUW,EAAe2D,KAAK,SAAAtE,GAAO,OAAGA,EAAQN,OAASA,IAEzD6E,EAAgB5D,EAAe6D,OAAO,SAAAxE,GAAO,OAAGA,EAAQN,OAASA,IALxC0B,EAOOC,mBAAS,CAAE2C,QAAS,EAAGnD,SAAU,KAPxCS,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAOxBqD,EAPwBnD,EAAA,GAOXH,EAPWG,EAAA,GAsB/B,OAbAoD,oBAAU,YAGS,eAAA3C,EAAAR,OAAAS,EAAA,EAAAT,CAAAU,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAA5C,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,MAAK,iBAAAlC,OAAkBd,IAD9B,cACR0C,EADQG,EAAAS,KAAAT,EAAAE,KAAA,EAEKL,EAAOa,OAFZ,OAERZ,EAFQE,EAAAS,KAId7B,EAAekB,GAJD,wBAAAE,EAAAW,SAAAf,MAAH,yBAAAJ,EAAAoB,MAAAC,KAAAC,YAAA,EAOfsB,IACD,CAACjF,IAEAM,EAEAZ,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,MAAMF,EAAQL,OAC5BP,EAAAC,EAAAC,cAACsF,EAAD,CAAe1D,YAAaxB,EAAMsE,QAASS,EAAYT,QAAS7C,eAAgBA,IAC/EnB,EAAQJ,QAAQG,IAAI,SAAC8E,EAAU5E,GAAX,OACjBb,EAAAC,EAAAC,cAAA,KAAGW,IAAKA,GAAM4E,KAElBzF,EAAAC,EAAAC,cAACwF,EAAD,CAAcjE,SAAU4D,EAAY5D,WACpCzB,EAAAC,EAAAC,cAACyF,EAAD,CAAgB7D,YAAaxB,EAAMyB,eAAgBA,IACnD/B,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACoB,EAAD,CAAcjB,SAAU8E,MAZhBnF,EAAAC,EAAAC,cAAC0F,EAAD,OCATC,EA5BA,kBACX7F,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iDACPd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,eAAegF,KAAK,KAAjC,WACA9F,EAAAC,EAAAC,cAAA,UAAQY,UAAU,iBAAiBqD,KAAK,SAAS4B,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJnG,EAAAC,EAAAC,cAAA,QAAMY,UAAU,yBAEpBd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BAA2BoD,GAAG,aACzClE,EAAAC,EAAAC,cAAA,MAAIY,UAAU,cACVd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACVd,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,KAA9B,QAAuCnB,EAAAC,EAAAC,cAAA,QAAMY,UAAU,WAAhB,eAE3Cd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACVd,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAG,SAASL,UAAU,YAA5B,UAEJd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACVd,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAG,iBAAiBL,UAAU,YAApC,aAEJd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACVd,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,GAAG,WAAWL,UAAU,YAA9B,YAEJd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,YACVd,EAAAC,EAAAC,cAAA,KAAGY,UAAU,oBAAoBgF,KAAK,IAAIM,SAAS,KAAKC,gBAAc,QAAtE,iBCWTC,MApBf,WAEI,OACEtG,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACAlB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACbd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aACbd,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACExG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAW3G,EAAU4G,OAAK,IAC1C3G,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWtG,IAChCJ,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWrF,IACxCrB,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAW3B,IACxC/E,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOE,UAAW5B,SCfV8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/B,MACvB,2DCXNgC,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.695f4076.chunk.js","sourcesContent":["import React  from 'react';\r\n\r\nconst HomePage = () => {\r\n    return(\r\n    <>\r\n        <h1>Hello, welcome to my blog</h1>\r\n        <p>\r\n        React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.\r\n\r\nDeclarative views make your code more predictable and easier to debug.\r\n\r\n        </p>\r\n        <p>\r\n        Build encapsulated components that manage their own state, then compose them to make complex UIs.\r\n\r\nSince component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\r\n        </p>\r\n        <p>\r\n        We don’t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code.\r\n\r\nReact can also render on the server using Node and power mobile apps using React Native.\r\n\r\n        </p>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React  from 'react';\r\n\r\nconst AboutPage = () => {\r\n    return(\r\n    <>\r\n        <h1>About me</h1>\r\n        <p>\r\n        React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.\r\n\r\nDeclarative views make your code more predictable and easier to debug.\r\n\r\n        </p>\r\n        <p>\r\n        Build encapsulated components that manage their own state, then compose them to make complex UIs.\r\n\r\nSince component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM.\r\n        </p>\r\n        <p>\r\n        We don’t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code.\r\n\r\nReact can also render on the server using Node and power mobile apps using React Native.\r\n\r\n        </p>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AboutPage;","const articles = [\r\n    {\r\n        name: \"learn-react\",\r\n        title: \"React - A JavaScript library for building user interfaces\",\r\n        content: [\r\n            `React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes.\r\n            Declarative views make your code more predictable and easier to debug.`,\r\n            `Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep state out of the DOM. Learn Once, Write Anywhere`,\r\n            `We don’t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using React Native.`\r\n        ]\r\n    },\r\n    {\r\n        name: \"learn-node\",\r\n        title: \"About Node.js®\",\r\n        content: [\r\n            `As an asynchronous event driven JavaScript runtime, Node is designed to build scalable network applications. In the following \"hello world\" example, many connections can be handled concurrently. Upon each connection the callback is fired, but if there is no work to be done, Node will sleep. `,\r\n            `HTTP is a first class citizen in Node, designed with streaming and low latency in mind. This makes Node well suited for the foundation of a web library or framework.`,\r\n            `Just because Node is designed without threads, doesn't mean you cannot take advantage of multiple cores in your environment. Child processes can be spawned by using our child_process.fork() API, and are designed to be easy to communicate with. Built upon that same interface is the cluster module, which allows you to share sockets between processes to enable load balancing over your cores. `\r\n        ]\r\n    },\r\n    {\r\n        name: \"learn-json\",\r\n        title: \"Introducing JSON\",\r\n        content: [\r\n            `JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition - December 1999. JSON is a text format that is completely language independent but uses conventions that are familiar to programmers of the C-family of languages, including C, C++, C#, Java, JavaScript, Perl, Python, and many others. These properties make JSON an ideal data-interchange language. `,\r\n            `JSON is built on two structures: A collection of name/value pairs. In various languages, this is realized as an object, record, struct, dictionary, hash table, keyed list, or associative array.\r\n            An ordered list of values. In most languages, this is realized as an array, vector, list, or sequence.`,\r\n            `These are universal data structures. Virtually all modern programming languages support them in one form or another. It makes sense that a data format that is interchangeable with programming languages also be based on these structures.`\r\n        ]\r\n    }\r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst ArticlesList = ({ articles}) => (\r\n    <>\r\n         {articles.map((article, key)=>(\r\n            <div className=\"card\" style={{width: 50 + \"rem\"}} key={key}>\r\n            <h5 className=\"card-header\">Featured</h5>\r\n\r\n              <div className=\"card-body\">\r\n                    \r\n                        <h3>{article.title}</h3>\r\n                        <p>{article.content[0].substring(0,150)}...</p>\r\n                        <Link key={key} to={`/article/${article.name}`} className=\"btn btn-primary\">{article.title}</Link>\r\n                        \r\n                </div>\r\n            </div>\r\n        ))}\r\n    </>\r\n)\r\n\r\nexport default ArticlesList;","import React  from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\n\r\nconst ArticlesListPage = () => {\r\n    return(\r\n    <>\r\n\r\n        <ArticlesList articles={articleContent}/>\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\nexport default ArticlesListPage;","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n    <>\r\n    <h3>Comments:</h3>\r\n    {comments.map( (comment, key) => (\r\n        <div key={key}>\r\n            <h4>{comment.userName}</h4>\r\n            <p>{comment.text}</p>\r\n        </div>\r\n    ))}\r\n    </>\r\n);\r\n\r\nexport default CommentsList;","import React, { useState } from 'react';\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [userName, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ userName, text: commentText }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    Name:\r\n                    <input className=\"form-control\" type=\"text\" value={userName} onChange={(event) => setUsername(event.target.value)} />\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>\r\n                    Comment:\r\n                    <textarea className=\"form-control\" rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n                </label>\r\n            </div>\r\n            <button onClick={() => addComment()} className=\"btn btn-primary\">Add Comment</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCommentForm;","import React from 'react';\r\nimport { async } from 'q';\r\n\r\nconst UpvoteSection = ({ articleName, upvotes, setArticleInfo}) => {\r\n\r\n    const upvoteArticle= async()=>{\r\n        const result = await fetch(`/api/articles/${articleName}/upvotes`, {\r\n            method: 'post',\r\n        }); \r\n\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div id=\"upvote-section\">\r\n            <button className=\"btn btn-primary\" onClick={() => upvoteArticle() }>Add upvote</button>\r\n            <p>This article has been upvoted <b>{upvotes}</b> times!</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpvoteSection;","import React from 'react';\r\n\r\nconst PageNotFound = () => (\r\n    <h1>404: Page not found</h1>\r\n)\r\n\r\nexport default PageNotFound;","import React, { useState, useEffect }  from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\nimport UpvoteSection from '../components/UpvoteSection';\r\nimport PageNotFound from './PageNotFound';\r\n\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    \r\n    const name = match.params.name;\r\n    const article = articleContent.find(article=> article.name === name);\r\n\r\n    const otherArticles = articleContent.filter(article=> article.name !== name);\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n    useEffect(() => {\r\n        //setArticleInfo({ upvotes: Math.ceil(Math.random() * 10)});\r\n\r\n        const fetchData = async() => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            //console.log(body);\r\n            setArticleInfo(body);\r\n            //console.log(articleInfo.comments);\r\n        }   \r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if(!article) return <PageNotFound />\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col col-xs-12\">\r\n                <h1 className=\"h1\">{article.title}</h1>\r\n                <UpvoteSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n                {article.content.map((paragraph,key) => (\r\n                    <p key={key}>{paragraph}</p>\r\n                ))}\r\n                <CommentsList comments={articleInfo.comments} />\r\n                <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n                <h3>Other Articles</h3>\r\n                <ArticlesList articles={otherArticles} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">My blog</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/articles-list\" className=\"nav-link\">Articles</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/article\" className=\"nav-link\">Article</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n    </nav>\r\n);\r\n\r\nexport default NavBar;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\n\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NavBar from './NavBar';\nimport PageNotFound from './pages/PageNotFound';\n\nfunction App() {\n  \n    return (\n      <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" component={HomePage} exact />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/articles-list\" component={ArticlesListPage} />\n            <Route path=\"/article/:name\" component={ArticlePage} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </div>\n      </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}